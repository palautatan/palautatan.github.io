x <- runif(10, min=0, max=10)
y <- 2*x + rnorm(10, mean=0, sd=1)
model_fit  <- lm(y[-ix] ~ x[-ix])
model_fit
predict_ix <- predict(model_fit, new_data=x[ix])
predict_ix
x[ix]
predict_ix <- predict(model_fit, new_data=x[ix])
predict_ix
predict_ix <- predict.lm(model_fit, new_data=x[ix])
predict_ix
[-ix]
model_fit  <- lm(y[-ix] ~ x[-ix])
model_fit
model_fit$coefficients
model_fit$coefficients[2]*x[ix]
model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix]
model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix]
y[ix]
x <- runif(10, min=0, max=10)
y <- 2*x + rnorm(10, mean=0, sd=1)
set.seed(200)
x <- runif(10, min=0, max=10)
y <- 2*x + rnorm(10, mean=0, sd=1)
smaller_model_risks <- c()
for (ix in 1:length(y)) {
model_fit  <- lm(y[-ix] ~ x[-ix])
estimate   <- model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix]
risk       <- (estimate-y[ix])^2
smaller_model_risks <- c(smaller_model_risks, risk)
}
smaller_model_risks
sum(smaller_model_risks)
model_fit  <- lm(y[-ix] ~ x[-ix] + x[-ix]^2)
estimate   <- model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix] +
risk       <- (estimate-y[ix])^2
model_fit
model_fit$coefficients
model_fit  <- lm(y[-ix] ~ x[-ix] + x[-ix]^2)
model_fit
model_fit
model_fit  <- lm(y[-ix] ~ x[-ix] + x[-ix]^2)
model_fit
larger_model_risks <- c()
for (ix in 1:length(y)) {
model_fit  <- lm(y[-ix] ~ x[-ix] + x[-ix]^2)
estimate   <- model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix]
risk       <- (estimate-y[ix])^2
larger_model_risks <- c(larger_model_risks, risk)
}
sum(larger_model_risks)
larger_model_risks <- c()
for (ix in 1:length(y)) {
model_fit  <- lm(y[-ix] ~ x[-ix] + I(x[-ix])^2)
estimate   <- model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix]
risk       <- (estimate-y[ix])^2
larger_model_risks <- c(larger_model_risks, risk)
}
sum(larger_model_risks)
larger_model_risks <- c()
model_fit  <- lm(y[-ix] ~ x[-ix] + I(x[-ix])^2)
model_fit
model_fit  <- lm(y[-ix] ~ x[-ix] + I(x[-ix]^2))
model_fit
set.seed(200)
x <- runif(10, min=0, max=10)
y <- 2*x + rnorm(10, mean=0, sd=1)
smaller_model_risks <- c()
for (ix in 1:length(y)) {
model_fit  <- lm(y[-ix] ~ x[-ix])
estimate   <- model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix]
risk       <- (estimate-y[ix])^2
smaller_model_risks <- c(smaller_model_risks, risk)
}
sum(smaller_model_risks)
larger_model_risks <- c()
for (ix in 1:length(y)) {
model_fit  <- lm(y[-ix] ~ x[-ix] + I(x[-ix]^2))
estimate   <- model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix] + model_fit$coefficients[3]*x[ix]^2
risk       <- (estimate-y[ix])^2
larger_model_risks <- c(larger_model_risks, risk)
}
sum(larger_model_risks)
c(smallermod_risk = sum(smaller_model_risks),
c(smallermod_risk = sum(smaller_model_risks),
largermod_risk  = sum(larger_model_risks))
set.seed(200)
set.seed(200)
x <- runif(10, min=0, max=10)
y <- 2*x + rnorm(10, mean=0, sd=1)
smaller_model_risks <- c()
for (ix in 1:length(y)) {
model_fit  <- lm(y[-ix] ~ x[-ix])
estimate   <- model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix]
risk       <- (estimate-y[ix])^2
smaller_model_risks <- c(smaller_model_risks, risk)
}
larger_model_risks <- c()
for (ix in 1:length(y)) {
model_fit  <- lm(y[-ix] ~ x[-ix] + I(x[-ix]^2))
estimate   <- model_fit$coefficients[1] + model_fit$coefficients[2]*x[ix] + model_fit$coefficients[3]*x[ix]^2
risk       <- (estimate-y[ix])^2
larger_model_risks <- c(larger_model_risks, risk)
}
c(smallermod_risk = sum(smaller_model_risks),
largermod_risk  = sum(larger_model_risks))
# f(x|\theta) = (\theta + 1)x^\theta
min    <- 0
max    <- 1
theta  <- 1
set.seed(200)
x      <- runif(n=20, min=min, max=max)
x
sample <- (theta+1)*x^theta
sample
data.frame(sample)
data.frame(original_sample=sample)
# f(x|\theta) = (\theta + 1)x^\theta
min    <- 0
max    <- 1
theta  <- 1
set.seed(200)
x      <- runif(n=20, min=min, max=max)
sample <- (theta+1)*x^theta
sample <- data.frame(original_sample=sample)
sample
sample %>% sample_n(size=nrow(sample))
sample %>% sample_n(size=nrow(sample), replace=TRUE)
sample %>% sample_n(size=nrow(sample), replace=TRUE)
# f(x|\theta) = (\theta + 1)x^\theta
min    <- 0
max    <- 1
theta  <- 1
set.seed(200)
x      <- runif(n=20, min=min, max=max)
sample <- (theta+1)*x^theta
sample <- data.frame(sample)
sample
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE) %>%
summarize(1-(nrow(sample)/sum(ln(sample)))
summarize(1-(nrow(sample)/sum(ln(sample))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE) %>%
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE) %>%
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE) %>%
summarize(1-(nrow(sample)/sum(ln(sample)))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE) %>%
summarize(1-(nrow(sample)/sum(ln(sample)))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE) %>%
summarize(1-(nrow(sample)/sum(ln(sample)))
summarize(1-(nrow(sample)/sum(ln(sample%>%pull(sample))))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE) %>%
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE) %>%
summarize(1-(nrow(sample)/sum(ln(sample%>%pull(sample))))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(size=nrow(sample), replace=TRUE)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(length=nrow(sample), replace=TRUE)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(nrow(sample), replace=TRUE)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(nrow(sample), replace=TRUE)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n()
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(20)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(20, replace=TRUE)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(20, replace=TRUE) %>%
mutate(1-(20/sum(ln(sample))))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(20, replace=TRUE) %>%
mutate(1-(20/sum(log(sample))))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(20, replace=TRUE) %>%
summarize(1-(20/sum(log(sample))))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
sample %>% sample_n(20, replace=TRUE)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE)
boot_sample
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
log(boot_sample)
sum(log(boot_sample))
n/sum(log(boot_sample))
n/(sum(log(boot_sample)))
n/(sum(log(boot_sample)))
n
20/(sum(log(boot_sample)))
1-20/(sum(log(boot_sample)))
-1-20/(sum(log(boot_sample)))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hat
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:1000) {
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hats    <- c(mle_hats, mle_hat)
}
mle_hats
mean(mle_hats)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:10000) {
boot_sample <- sample %>% sample_n(20, replace=TRUE) %>% pull()
mle_hat     <- -1-20/(sum(log(boot_sample)))
mle_hats    <- c(mle_hats, mle_hat)
}
mean(mle_hats)
# f(x|\theta) = (\theta + 1)x^\theta
min    <- 0
max    <- 1
theta  <- 1
set.seed(200)
x      <- runif(n=50, min=min, max=max)
sample <- (theta+1)*x^theta
sample <- data.frame(sample)
sample
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:5000) {
boot_sample <- sample %>% sample_n(50, replace=TRUE) %>% pull()
mle_hat     <- -1-50/(sum(log(boot_sample)))
mle_hats    <- c(mle_hats, mle_hat)
}
mean(mle_hats)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:5000) {
boot_sample <- sample %>% sample_n(50, replace=TRUE) %>% pull()
mle_hat     <- -1-50/(sum(log(boot_sample)))
mle_hats    <- c(mle_hats, mle_hat)
}
mean(mle_hats)
?logLik
?log
log(boot_sample)
50/(sum(log(boot_sample)
)
50/(sum(log(boot_sample))
50/(sum(log(boot_sample))
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:5000) {
boot_sample <- sample %>% sample_n(50, replace=TRUE) %>% pull()
mle_hat     <- -1 - (50/(sum(log(boot_sample))))
mle_hats    <- c(mle_hats, mle_hat)
}
mean(mle_hats)
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:100000) {
boot_sample <- sample %>% sample_n(50, replace=TRUE) %>% pull()
mle_hat     <- -1 - (50/(sum(log(boot_sample))))
mle_hats    <- c(mle_hats, mle_hat)
}
mean(mle_hats)
mean(mle_hats)
boot_mean <- mean(mle_hats)
mle_hats - boot_mean
boot_variance <- sum((mle_hats - boot_mean)^2)
boot_se       <- sqrt(boot_variance)
boot_se
x
# f(x|\theta) = (\theta + 1)x^\theta
min    <- 0
max    <- 1
theta  <- 1
set.seed(200)
x      <- roundrunif(n=50, min=min, max=max), 2)
# f(x|\theta) = (\theta + 1)x^\theta
min    <- 0
max    <- 1
theta  <- 1
set.seed(200)
x      <- roundrunif(n=50, min=min, max=max), 2)
# f(x|\theta) = (\theta + 1)x^\theta
min    <- 0
max    <- 1
theta  <- 1
set.seed(200)
x      <- round(runif(n=50, min=min, max=max), 2)
sample <- (theta+1)*x^theta
sample <- data.frame(sample)
sample
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:100000) {
boot_sample <- sample %>% sample_n(50, replace=TRUE) %>% pull()
mle_hat     <- -1 - (50/(sum(log(boot_sample))))
mle_hats    <- c(mle_hats, mle_hat)
}
boot_mean <- mean(mle_hats)
boot_variance <- sum((mle_hats - boot_mean)^2)
boot_se       <- sqrt(boot_variance)
boot_se
boot_variance <- sum((mle_hats - boot_mean)^2) / B
boot_se       <- sqrt(boot_variance)
boot_se
# f(x|\theta) = (\theta + 1)x^\theta
min    <- 0
max    <- 1
theta  <- 1
set.seed(200)
x      <- round(runif(n=100, min=min, max=max), 2)
sample <- (theta+1)*x^theta
sample <- data.frame(sample)
sample
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:1000) {
boot_sample <- sample %>% sample_n(50, replace=TRUE) %>% pull()
mle_hat     <- -1 - (50/(sum(log(boot_sample))))
mle_hats    <- c(mle_hats, mle_hat)
}
boot_mean <- mean(mle_hats)
boot_mean
boot_variance <- sum((mle_hats - boot_mean)^2) / B
boot_se       <- sqrt(boot_variance)
boot_se
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:1000) {
boot_sample <- sample %>% sample_n(50, replace=TRUE) %>% pull()
mle_hat     <- -1 - (50/(sum(log(boot_sample))))
mle_hats    <- c(mle_hats, mle_hat)
}
boot_mean <- mean(mle_hats)
boot_mean
boot_variance <- sum((mle_hats - boot_mean)^2) / B
boot_se       <- sqrt(boot_variance)
boot_se
boot_mean
# f(x|\theta) = (\theta + 1)x^\theta
min    <- 0
max    <- 1
theta  <- 1
n      <- 100
set.seed(200)
x      <- round(runif(n=n, min=min, max=max), 2)
sample <- (theta+1)*x^theta
sample <- data.frame(sample)
sample
# \hat{\theta}=1 - \frac{n}{\sum_{i=1}^{n}\text{ln}(x_i)}
mle_hats <- c()
for (B in 1:1000) {
boot_sample <- sample %>% sample_n(n, replace=TRUE) %>% pull()
mle_hat     <- -1 - (n/(sum(log(boot_sample))))
mle_hats    <- c(mle_hats, mle_hat)
}
boot_mean <- mean(mle_hats)
boot_mean
boot_variance <- sum((mle_hats - boot_mean)^2) / B
boot_se       <- sqrt(boot_variance)
boot_se
boot_mean / sqrt(n)
boot_variance <- sum((mle_hats - boot_mean)^2) / B
boot_se       <- sqrt(boot_variance)
boot_se
(boot_mean+1) / sqrt(n)
group_a <- pref_a <- rep('A', 100)
group_b <- pref_b <- rep('B', 100)
cbind(group=rbind(group_a, group_b), pref=rbind(pref_a, pref_b))
data.frame(cbind(group=rbind(group_a, group_b), pref=rbind(pref_a, pref_b)))
data.frame(cbind(group=c(group_a, group_b), pref=c(pref_a, pref_b)))
pref_df <- data.frame(cbind(group=c(group_a, group_b), pref=c(pref_a, pref_b)))
pref_df
# * MARKET MORE TO A'S
# * ONLY EMAIL A'S
pref_df
# * MARKET MORE TO A'S
# * ONLY EMAIL A'S
which(pref_df==A)
# * MARKET MORE TO A'S
# * ONLY EMAIL A'S
which(pref_df[,1]=='A')
# * MARKET MORE TO A'S
# * ONLY EMAIL A'S
marketed <- which(pref_df[,1]=='A')
marketed
# * FIX A RATE
purchase_rate <- 0.5
marketed*purchase_rate
length(marketed)*purchase_rate
risk <- 200 - length(marketed)*purchase_rate
risk
# * MARKET ONLY TO A'S
# * ONLY EMAIL A'S
marketed <- length(which(pref_df[,1]=='A'))
risk <- 200 - marketed*purchase_rate
# * MARKET TO 1/2 A'S AND 1/2 B'S
marketed <- length(which(pref_df[,1]))/2
risk <- 200 - marketed*purchase_rate
risk
# * MARKET TO ALL
# * STOCK ONLY PRODUCT A
pred_df
# * FIX A RATE
purchase_rate <- 1
# * CREATE MARKET
group_a <- pref_a <- rep('A', 100)
group_b <- pref_b <- rep('B', 100)
pref_df <- data.frame(cbind(group=c(group_a, group_b), pref=c(pref_a, pref_b)))
pref_df
prob_buy_other <- rnorm(n=200, mean=0.5, sd=0.2)
prob_buy_other
prob_buy_other <- round(rnorm(n=200, mean=0.5, sd=0.2))
prob_buy_other
pref_df <- data.frame(cbind(group=c(group_a, group_b), pref=c(pref_a, pref_b), buy_other=prob_buy_other))
pref_df
prob_buy_other <- sample(x=c(0,1), prob=0.5)
prob_buy_other <- sample(x=c(0,1), prob=(0.5,0.5))
prob_buy_other <- sample(x=c(0,1), prob=c(0.5,0.5))
prob_buy_other
prob_buy_other <- sample(size=200, x=c(0,1), prob=c(0.5,0.5))
prob_buy_other <- sample(size=200, x=c(0,1), prob=c(0.5,0.5). replace=TRUE)
prob_buy_other <- sample(size=200, x=c(0,1), prob=c(0.5,0.5), replace=TRUE)
prob_buy_other
pref_df <- data.frame(cbind(group=c(group_a, group_b), pref=c(pref_a, pref_b), buy_other=prob_buy_other))
pref_df
pref_df
# * FIX A RATE
purchase_rate <- 1
global_likeability <- 0.5
# * CREATE MARKET
group_a        <- pref_a <- rep('A', 100)
group_b        <- pref_b <- rep('B', 100)
prob_buy_other <- sample(size=200, x=c(0,1), prob=c(global_likeability, 1-global_likeability), replace=TRUE)
prob_buy_other
pref_df <- data.frame(cbind(group=c(group_a, group_b), pref=c(pref_a, pref_b), buy_other=prob_buy_other))
pref_df
setwd("~/GitHub/palautatan.github.io/blogs/gap-internship")
