data <- read.csv("COVID deaths.csv")
dim(data)
names(data)
head(data)
data_filtered <- data %>% filter(Age.Group == "25-34", State == "US", Condition != "COVID-19")
library(dplyr)
data_filtered <- data %>% filter(Age.Group == "25-34", State == "US", Condition != "COVID-19")
ggplot(data_filtered, aes(x = Age.Group, y = Number.of.COVID.19.Deaths)) +
geom_bar(aes(fill = Condition), col="white", stat = "identity", position = "dodge") +
labs(title = "Conditions contributing to deaths among US COVID-19 patients aged 25-34 ",
x = "Age") +
theme_minimal() +
theme(legend.position="bottom") +
guides(fill=guide_legend(nrow=5, byrow=TRUE))
library(ggplot2)
data_filtered <- data %>% filter(Age.Group == "25-34", State == "US", Condition != "COVID-19")
ggplot(data_filtered, aes(x = Age.Group, y = Number.of.COVID.19.Deaths)) +
geom_bar(aes(fill = Condition), col="white", stat = "identity", position = "dodge") +
labs(title = "Conditions contributing to deaths among US COVID-19 patients aged 25-34 ",
x = "Age") +
theme_minimal() +
theme(legend.position="bottom") +
guides(fill=guide_legend(nrow=5, byrow=TRUE))
data
ggplot(data_filtered, aes(x = Age.Group, y = Number.of.COVID.19.Deaths)) +
geom_bar(aes(fill = Condition), col="white", stat = "identity", position = "dodge") +
labs(title = "Conditions contributing to deaths among US COVID-19 patients aged 25-34 ",
x = "Age") +
theme_minimal() +
theme(legend.position="bottom") +
guides(fill=guide_legend(nrow=5, byrow=TRUE))
data_filtered %>%
ggplot(aes(x = Age.Group, y = Number.of.COVID.19.Deaths))) +
data_filtered %>%
ggplot(aes(x = Age.Group, y = Number.of.COVID.19.Deaths)) +
geom_bar(aes(fill = Condition), col="white", stat = "identity", position = "dodge") +
labs(title = "Conditions contributing to deaths among US COVID-19 patients aged 25-34 ",
x = "Age") +
theme_minimal() +
theme(legend.position="bottom") +
guides(fill=guide_legend(nrow=5, byrow=TRUE))
# Number of COVID cases in dataset
covid_only_df <- data %>%
filter(Age.Group %in% c("65-74","75-84","85+"),
State == "US",
Condition == "COVID-19") %>%
summarize(num_covid_cases = sum(Number.of.COVID.19.Deaths))
covid_cases <- covid_only_df$num_covid_cases
# Filter dataset for part 2
data_filtered_pt2 <- data %>% filter(Age.Group %in% c("65-74","75-84","85+"),
State == "US",
Condition != "COVID-19")
# Find number of deaths per condition
data_aggregate <- data_filtered_pt2 %>% group_by(Condition) %>%
summarize(NumberDeaths = sum(Number.of.COVID.19.Deaths))
# Convert to proportion for ease of reading graph
data_proportion <- data_aggregate %>%
mutate(ProportionCovidDeaths = NumberDeaths/covid_cases)
# Graph this
ggplot(data_proportion, aes(x = Condition, y = ProportionCovidDeaths)) +
geom_bar(col="white", fill="dark blue", stat = "identity", position = "dodge") +
labs(title = "Proportion of COVID-19 deaths per condition for those 65+ years old",
x = "Condition", y = "Proportion COVID Deaths") +
theme_minimal() +
theme(legend.position="bottom") +
theme(axis.text.x = element_text(angle = 90, hjust=1))
?reorder
data_filtered_pt3
# Filter dataset for part 3
data_filtered_pt3 <- data %>% filter(Age.Group == "All ages",
Condition == "Diabetes",
State != "US")
data_filtered_pt3
dim(data_filtered_pt3)
head(data_filtered_pt3)
mean(data_filtered_pt3)
mean(data_filtered_pt3$Number.of.COVID.19.Deaths)
mean(data_filtered_pt3$Number.of.COVID.19.Deaths, na.rm=TRUE)
data_filtered_pt3
# Filter dataset for part 3
data_filtered_pt3 <- data %>% filter(Age.Group == "All ages",
Condition == "Diabetes",
State != "US",
!is.na(Number.of.COVID.19.Deaths))
mean(data_filtered_pt3$Number.of.COVID.19.Deaths, na.rm=TRUE)
# Get our sample mean, SD, and sample size
data_filtered_pt3_mean <- data_filtered_pt3 %>%
summarize(sample_mean = mean(Number.of.COVID.19.Deaths),
sample_sd = sd(Number.of.COVID.19.Deaths),
sample_size = sum(Number.of.COVID.19.Deaths))
data_filtered_pt3_mean
data_filtered_pt3_mean
data_filtered_pt3
# Then find the t*
df_sample <- data_filtered_pt3_mean$sample_size-1
tstar <- qt(p=0.975, df=df_sample)
# test significance
pt(q=tstar, df_sample, lower.tail = TRUE)
tstar
# test significance
pt(q=tstar, df_sample, lower.tail = FALSE)
data_filtered_pt3
data_filtered_pt3_mean %>%
ggplot(aes(x=State, y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity')
data_filtered_pt3
data_filtered_pt3 %>%
ggplot(aes(x=State, y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity')
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity')
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle = 90, hjust=1))
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State')
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State') +
ggtitle('Number of COVID Deaths Per State')
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State') +
ggtitle('Number of COVID Deaths Per State')
data_filtered_ptx <- data %>% filter(Age.Group == "25-34",
Condition == "Diabetes",
State != "US",
!is.na(Number.of.COVID.19.Deaths))
# Get our sample mean, SD, and sample size
data_filtered_ptx_mean <- data_filtered_ptx %>%
summarize(sample_mean = mean(Number.of.COVID.19.Deaths),
sample_sd = sd(Number.of.COVID.19.Deaths),
sample_size = sum(Number.of.COVID.19.Deaths))
data_filtered_ptx_mean
## THIS VISUAL IS OKAY FOR "COLOR" IN YOUR PROJECT
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State') +
ggtitle('Number of COVID Deaths Per State')
data_filtered_pt3_mean
# test significance
pt(q=tstar, df_sample, lower.tail=FALSE)
data_filtered_pt3 %>%
summarize(num = sample_mean - 0.000214*sample_size,
denom = sd / sqrt(sample_size),
critical_t = num/denom)
data_filtered_pt3_mean %>%
summarize(num = sample_mean - 0.000214*sample_size,
denom = sd / sqrt(sample_size),
critical_t = num/denom)
data_filtered_pt3_mean
data_filtered_pt3_mean %>%
summarize(num = sample_mean - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom)
crit_t_values <- data_filtered_pt3_mean %>%
summarize(num = sample_mean - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom)
test_values <- data_filtered_pt3_mean %>%
summarize(num = sample_mean - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom,
p_value = pt(q=critical_t, df_sample, lower.tail=FALSE))
test_values
critical_t
test_values
data_filtered_pt3
data_filtered_pt3_mean
data_filtered_pt3
data %>% filter(Age.Group == "All ages",
Condition == "Diabetes",
State != "US",
is.na(Number.of.COVID.19.Deaths))
data_filtered_pt3_mean
table_props <- cbind(diabetes_covid = data_filtered_pt3_mean %>%pull(sample_mean),
diabetes_overall = 0.000214)
table_props
table_props %>%
reshape2::melt(id.vars='')
table_props %>%
reshape2::melt(id.vars='') %>%
ggplot(aes(x=))
table_props %>%
reshape2::melt(id.vars='')
table_props %>%
reshape2::melt(id.vars=NA) %>%
ggplot(aes(x=))
table_props %>%
reshape2::melt(id.vars=NA)
table_props %>%
reshape2::melt(id.vars=NA) %>%
ggplot(aes(x=Var2, y=value))
table_props %>%
reshape2::melt(id.vars=NA) %>%
ggplot(aes(x=Var2, y=value)) +
geom_bar()
table_props %>%
reshape2::melt(id.vars=NA) %>%
ggplot(aes(x=Var2, y=value)) +
geom_bar(stat='identity')
data_filtered_pt3_mean
test_values <- data_filtered_pt3_mean %>%
summarize(num = sample_mean/sample_size - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom,
p_value = pt(q=critical_t, df_sample, lower.tail=FALSE))
test_values
test_values <- data_filtered_pt3_mean %>%
summarize(sample_p = sample_mean/sample_size,
num = sample_p  - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom,
p_value = pt(q=critical_t, df_sample, lower.tail=FALSE))
test_values
0.000214
sample_p
0.000214
test_values
table_props <- cbind(diabetes_covid = data_filtered_pt3_mean %>% summarize(sample_mean/sample_size),
diabetes_overall = 0.000214)
table_props %>%
reshape2::melt(id.vars=NA) %>%
ggplot(aes(x=Var2, y=value)) +
geom_bar(stat='identity')
table_props %>%
reshape2::melt(id.vars=NULL) %>%
ggplot(aes(x=Var2, y=value)) +
geom_bar(stat='identity')
table_props %>%
reshape2::melt(id.vars=NULL)
table_props %>%
reshape2::melt(id.vars=NULL) %>%
ggplot(aes(x=variable, y=value)) +
geom_bar(stat='identity')
table_props <- cbind(diabetes_covid = data_filtered_pt3_mean %>% summarize(diabetes_covid=sample_mean/sample_size),
diabetes_overall = 0.000214)
table_props %>%
reshape2::melt(id.vars=NULL) %>%
ggplot(aes(x=variable, y=value)) +
geom_bar(stat='identity')
test_values <- data_filtered_pt3_mean %>%
summarize(num = sample_mean  - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom,
p_value = pt(q=critical_t, df_sample, lower.tail=FALSE))
test_values
table_props %>%
reshape2::melt(id.vars=NULL) %>%
ggplot(aes(x=variable, y=value)) +
geom_bar(stat='identity') +
theme_minimal()
# Filter dataset for part 3
data_filtered_pt3 <- data %>% filter(Age.Group == "All ages",
Condition == "Diabetes",
State != "US",
!is.na(Number.of.COVID.19.Deaths))
# Get our sample mean, SD, and sample size
data_filtered_pt3_mean <- data_filtered_pt3 %>%
summarize(sample_mean = mean(Number.of.COVID.19.Deaths),
sample_sd = sd(Number.of.COVID.19.Deaths),
sample_size = sum(Number.of.COVID.19.Deaths))
data_filtered_pt3_mean
# Then find the t*
df_sample <- data_filtered_pt3_mean$sample_size-1
# critical t = ( mu - hypothesized_mu ) / ( sd / sqrt(n))
test_values <- data_filtered_pt3_mean %>%
summarize(num = sample_mean  - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom,
p_value = pt(q=critical_t, df_sample, lower.tail=FALSE))
test_values
###
## THIS VISUAL IS OKAY FOR "COLOR" IN YOUR PROJECT
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State') +
ggtitle('Number of COVID Deaths Per State')
data %>%
filter(Age.Group == "All ages",
Condition == "Diabetes",
State != "US",
is.na(Number.of.COVID.19.Deaths)) %>%
select(c(State, Number.of.COVID.19.Deaths))
# Filter dataset for part 3
data_filtered_pt3 <- data %>% filter(Age.Group == "All ages",
Condition == "Diabetes",
State != "US",
!is.na(Number.of.COVID.19.Deaths)) %>%
select(c(State, Number.of.COVID.19.Deaths))
head(data_filtered_pt3)
# Get our sample mean, SD, and sample size
data_filtered_pt3_mean <- data_filtered_pt3 %>%
summarize(sample_mean = mean(Number.of.COVID.19.Deaths),
sample_sd = sd(Number.of.COVID.19.Deaths),
sample_size = sum(Number.of.COVID.19.Deaths))
data_filtered_pt3_mean
# Then find the t*
df_sample <- data_filtered_pt3_mean$sample_size-1
# critical t = ( mu - hypothesized_mu ) / ( sd / sqrt(n))
test_values <- data_filtered_pt3_mean %>%
summarize(num = sample_mean  - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom,
p_value = pt(q=critical_t, df_sample, lower.tail=FALSE))
test_values
###
## THIS VISUAL IS OKAY FOR "COLOR" IN YOUR PROJECT
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State') +
ggtitle('Number of COVID Deaths Per State')
## THIS VISUAL IS OKAY FOR "COLOR" IN YOUR PROJECT
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State') +
ggtitle('Number of COVID Deaths Per State')
table_props <- cbind(diabetes_covid = data_filtered_pt3_mean %>% summarize(diabetes_covid=sample_mean/sample_size),
diabetes_overall = 0.000214)
table_props %>%
reshape2::melt(id.vars=NULL) %>%
ggplot(aes(x=variable, y=value)) +
geom_bar(stat='identity') +
theme_minimal()
table_props %>%
reshape2::melt(id.vars=NULL) %>%
ggplot(aes(x=variable, y=value)) +
geom_bar(stat='identity') +
theme_minimal()  +
xlab('Group **EDIT**') +
ggtitle('Number of COVID Deaths Per State **EDIT THIS**')
## THIS VISUAL IS OKAY FOR "COLOR" IN YOUR PROJECT
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State') +
ggtitle('Number of COVID Deaths Per State **EDIT THIS**')
data_filtered_pt3 %>%
geom_histogram(aes(x=Number.of.COVID.19.Deaths))
data_filtered_pt3 %>%
ggplot(aes(x=Number.of.COVID.19.Deaths)) +
geom_histogram()
data_filtered_pt3 %>%
ggplot(aes(x=Number.of.COVID.19.Deaths)) +
geom_histogram() +
theme_minimal()
data_filtered_pt3 %>%
ggplot(aes(x=Number.of.COVID.19.Deaths)) +
geom_histogram(binwidth=100) +
theme_minimal()
data_filtered_pt3 %>%
ggplot(aes(x=Number.of.COVID.19.Deaths)) +
geom_histogram(col='black', binwidth=100) +
theme_minimal()
data_filtered_pt3 %>%
ggplot(aes(x=Number.of.COVID.19.Deaths)) +
geom_histogram(col='black', lwd=0.2, binwidth=100) +
theme_minimal()
# Get our sample mean, SD, and sample size
data_filtered_pt3_mean <- data_filtered_pt3 %>%
summarize(sample_mean = mean(Number.of.COVID.19.Deaths),
sample_sd = sd(Number.of.COVID.19.Deaths),
sample_size = nrow(data_filtered_pt3))
data_filtered_pt3_mean
# Then find the t*
df_sample <- data_filtered_pt3_mean$sample_size-1
# critical t = ( mu - hypothesized_mu ) / ( sd / sqrt(n))
test_values <- data_filtered_pt3_mean %>%
summarize(num = sample_mean  - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom,
p_value = pt(q=critical_t, df_sample, lower.tail=FALSE))
test_values
###
# Get our sample mean, SD, and sample size
data_filtered_pt3_mean <- data_filtered_pt3 %>%
summarize(sample_mean = mean(Number.of.COVID.19.Deaths),
sample_sd = sd(Number.of.COVID.19.Deaths),
sample_size = nrow(data_filtered_pt3))
data_filtered_pt3_mean
# Then find the t*
df_sample <- data_filtered_pt3_mean$sample_size-1
# critical t = ( mu - hypothesized_mu ) / ( sd / sqrt(n))
test_values <- data_filtered_pt3_mean %>%
summarize(num = sample_mean  - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom,
p_value = pt(q=critical_t, df_sample, lower.tail=FALSE))
test_values
###
data_filtered_pt3 %>%
ggplot(aes(x=Number.of.COVID.19.Deaths)) +
geom_histogram(col='black', lwd=0.2, binwidth=100) +
theme_minimal()
## THIS VISUAL IS OKAY FOR "COLOR" IN YOUR PROJECT
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State') +
ggtitle('Number of COVID Deaths Per State **EDIT THIS**')
table_props <- cbind(diabetes_covid = data_filtered_pt3_mean %>% summarize(diabetes_covid=sample_mean/sample_size),
diabetes_overall = 0.000214)
table_props %>%
reshape2::melt(id.vars=NULL) %>%
ggplot(aes(x=variable, y=value)) +
geom_bar(stat='identity') +
theme_minimal()  +
xlab('Group **EDIT**') +
ggtitle('Number of COVID Deaths Per State **EDIT THIS**')
sample_mean
table_props
# Get our sample mean, SD, and sample size
data_filtered_pt3_mean <- data_filtered_pt3 %>%
summarize(sample_mean = mean(Number.of.COVID.19.Deaths),
sample_sd = sd(Number.of.COVID.19.Deaths),
sample_size = sum(Number.of.COVID.19.Deaths))
data_filtered_pt3_mean
# Then find the t*
df_sample <- data_filtered_pt3_mean$sample_size-1
# critical t = ( mu - hypothesized_mu ) / ( sd / sqrt(n))
test_values <- data_filtered_pt3_mean %>%
summarize(num = sample_mean  - 0.000214*sample_size,
denom = sample_sd / sqrt(sample_size),
critical_t = num/denom,
p_value = pt(q=critical_t, df_sample, lower.tail=FALSE))
test_values
###
data_filtered_pt3 %>%
ggplot(aes(x=Number.of.COVID.19.Deaths)) +
geom_histogram(col='black', lwd=0.2, binwidth=100) +
theme_minimal()
## THIS VISUAL IS OKAY FOR "COLOR" IN YOUR PROJECT
data_filtered_pt3 %>%
ggplot(aes(x=reorder(State, -Number.of.COVID.19.Deaths), y=Number.of.COVID.19.Deaths)) +
geom_bar(stat='identity') +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, hjust=1)) +
xlab('State') +
ggtitle('Number of COVID Deaths Per State **EDIT THIS**')
table_props <- cbind(diabetes_covid = data_filtered_pt3_mean %>% summarize(diabetes_covid=sample_mean/sample_size),
diabetes_overall = 0.000214)
table_props %>%
reshape2::melt(id.vars=NULL) %>%
ggplot(aes(x=variable, y=value)) +
geom_bar(stat='identity') +
theme_minimal()  +
xlab('Group **EDIT**') +
ggtitle('Number of COVID Deaths Per State **EDIT THIS**')
data_filtered_pt3 %>%
ggplot(aes(x=Number.of.COVID.19.Deaths/sum(Number.of.COVID.19.Deaths))) +
geom_histogram(col='black', lwd=0.2, binwidth=100) +
theme_minimal()
data_filtered_pt3 %>%
summarize(num=Number.of.COVID.19.Deaths/sum(Number.of.COVID.19.Deaths))
data_filtered_pt3 %>%
summarize(num=Number.of.COVID.19.Deaths/sum(Number.of.COVID.19.Deaths)) %>%
ggplot(aes(x=num)) +
geom_histogram(col='black', lwd=0.2, binwidth=100) +
theme_minimal()
data_filtered_pt3 %>%
summarize(num=Number.of.COVID.19.Deaths/sum(Number.of.COVID.19.Deaths)) %>%
ggplot(aes(x=num)) +
geom_histogram(col='black', lwd=0.2) +
theme_minimal()
